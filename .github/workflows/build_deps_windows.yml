name: Build windows deps

on:
  workflow_call:

jobs:
  build_deps:
    name: Build deps
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup dev on Windows
        uses: microsoft/setup-msbuild@v2

      - name: Build on Windows
        working-directory: ${{ github.workspace }}
        run: |
           choco install strawberryperl
           choco install pkgconfiglite
           mkdir ${{ github.workspace }}\deps\build
           cd "${{ github.workspace }}\deps\build"
           cmake ../ -G "Visual Studio 16 2019" -A x64 -DDESTDIR="${{ github.workspace }}/work/Projects/GalaxySlicerNeo_deps" -DCMAKE_BUILD_TYPE=Release
           msbuild /m ALL_BUILD.vcxproj
           cd ${{ github.workspace }}/work/Projects/GalaxySlicerNeo_deps
           
      - name: Clean up
        working-directory: ${{ github.workspace }}
        run: |
            powershell -command "Remove-Item '${{ github.workspace }}/deps/build' -Recurse -Force"

      - name: Cache deps
        uses: actions/cache/save@v4
        id: cache-deps
        with:
          path: ${{ github.workspace }}/work/Projects/GalaxySlicerNeo_deps
          key: ${{ github.sha }}-deps
            
      #- name: pack deps on Windows
      #  working-directory: ${{ github.workspace }}
      #  run: Compress-Archive -Path "${{ github.workspace }}\deps\build\*" -DestinationPath "${{ github.workspace }}\deps\build\GalaxySlicerNeo_dep_win64_vs2022.zip"
      #  shell: pwsh

      #- name: Upload windows deps
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: GalaxySlicerNeo_dep_win64_vs2022.zip
      #    path: ${{ github.workspace }}\deps\build\GalaxySlicerNeo_dep_win64_vs2022.zip

  prepare_pkg_config:
    name: pkg-config
    uses: fr3ak2402/BambuStudio/.github/workflows/prepare_pkgconfig_windows.yml@master

  prepare_python:
    name: Python
    uses: fr3ak2402/BambuStudio/.github/workflows/prepare_python_windows.yml@master

  prepare_deps:
    name: Prepare deps
    runs-on: windows-latest
    needs:
      - build_deps
      - prepare_pkg_config
      - prepare_python
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore deps
        uses: actions/cache/restore@v4
        id: cache-deps
        with:
          path: ${{ github.workspace }}/work/Projects/GalaxySlicerNeo_deps
          key: ${{ github.sha }}-deps

      - name: Restore pkg-config
        uses: actions/cache/restore@v4
        id: cache-pkgconfig
        with:
          path: ${{ github.workspace }}/download/pkg-config
          key: ${{ github.sha }}-pkgconfig

      - name: Restore python
        uses: actions/cache/restore@v4
        id: cache-python
        with:
          path: ${{ github.workspace }}/download/python
          key: ${{ github.sha }}-python

      - name: Copy pkg-config into deps
        working-directory: ${{ github.workspace }}
        run: |
            powershell -command "Copy-Item '${{ github.workspace }}\download\pkg-config\bin\pkg-config.exe' -Destination '${{ github.workspace }}\work\Projects\GalaxySlicerNeo_deps\usr\local\bin'"
            powershell -command "Copy-Item -Path '${{ github.workspace }}\download\pkg-config\share\aclocal' -Destination '${{ github.workspace }}\work\Projects\GalaxySlicerNeo_deps\usr\local\share' -Recurse"

      - name: Copy python into deps
        working-directory: ${{ github.workspace }}
        run: |
            powershell -command "Copy-Item -Path '${{ github.workspace }}/download/python' -Destination '${{ github.workspace }}\work\Projects\GalaxySlicerNeo_deps' -Recurse"

      - name: Upload deps (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: deps.zip
          path: ${{ github.workspace }}/work/Projects/GalaxySlicerNeo_deps
