name: Build windows slicer

on:
  workflow_call:

jobs:
  build_slicer:
    name: Build slicer
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup dev on Windows
        uses: microsoft/setup-msbuild@v2

      - name: Install nsis and pkgconfig
        run: |
          dir "C:/Program Files (x86)/Windows Kits/10/Include"
          choco install nsis
          choco install pkgconfiglite

      - name: Download deps
        uses: actions/download-artifact@v4
        with:
          name: GalaxySlicerNeo_deps_win_x64_v${{ vars.DEPS_VERSION }}-nightly.zip
          path: ${{ github.workspace }}/work/Projects/GalaxySlicerNeo_deps

      - name: Build slicer on Windows
        working-directory: ${{ github.workspace }}
        run: |
            mkdir build
            cd build
            cmake .. -G "Visual Studio 16 2019" -DBBL_RELEASE_TO_PUBLIC=1 -DCMAKE_PREFIX_PATH="${{ github.workspace }}\work\Projects\GalaxySlicerNeo_deps\usr\local" -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\work\Projects\GalaxySlicerNeo" -DCMAKE_BUILD_TYPE=Release -DWIN10SDK_PATH="C:/Program Files (x86)/Windows Kits/10/Include/10.0.22000.0"
            cmake --build . --target install --config Release

      - name: Clean up
        working-directory: ${{ github.workspace }}
        run: |
            powershell -command "Remove-Item '${{ github.workspace }}/build' -Recurse -Force"

      - name: Sign slicer on Windows
        uses: skymatic/code-sign-action@v3.0.0
        with:
          certificate: '${{ secrets.WINDOWS_CERTIFICATE }}'
          password: '${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}'
          certificatesha1: '${{ secrets.WINDOWS_CERTIFICATE_HASH }}'
          certificatename: '${{ secrets.WINDOWS_CERTIFICATE_NAME }}'
          timestampUrl: 'http://timestamp.digicert.com'
          folder: ${{ github.workspace }}/work/Projects/GalaxySlicerNeo
          recursive: true

      - name: Copy Python
        working-directory: ${{ github.workspace }}
        run: |
            cd ${{ github.workspace }}/work/Projects/GalaxySlicerNeo
            mkdir python
            powershell -command "Copy-Item -Path ${{ github.workspace }}/work/Projects/GalaxySlicerNeo_deps/python/* -Destination ${{ github.workspace }}/work/Projects/GalaxySlicerNeo/python -Recurse"

      - name: Upload slicer (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: GalaxySlicerNeo_win_x64_v${{ vars.GSN_VERSION }}-nightly.zip
          path: ${{ github.workspace }}/work/Projects/GalaxySlicerNeo

  create_installer:
    name: Create installer
    runs-on: windows-latest
    needs: build_slicer
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download slicer (windows)
        uses: actions/download-artifact@v4
        with:
          name: GalaxySlicerNeo_win_x64_v${{ vars.GSN_VERSION }}-nightly.zip
          path: ${{ github.workspace }}/work/Projects/GalaxySlicerNeo

      - name: Generate Inno Setup script
        run: |
          $installerDir = "${{ github.workspace }}\installer"
          mkdir $installerDir -Force

          echo "[Setup]" > ${{ github.workspace }}/installer/installer_script.iss
          echo "AppName=GalaxySlicerNeo" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "AppVersion=1.0.7" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "DefaultDirName={pf}\GalaxySlicerNeo" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "OutputDir={app}\installer\output" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "OutputBaseFilename=GalaxySlicerNeo_Setup" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "Compression=lzma" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "SolidCompression=yes" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "PrivilegesRequired=admin" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "ArchitecturesInstallIn64BitMode=x64" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "" >> ${{ github.workspace }}/installer/installer_script.iss

          echo "[Files]" >> ${{ github.workspace }}/installer/installer_script.iss
          echo "Source: \"${{ github.workspace }}\work\Projects\GalaxySlicerNeo\*\"; DestDir: \"{app}\"; Flags: recursesubdirs ignoreversion" >> ${{ github.workspace }}/installer/installer_script.iss

      - name: Build installer with Inno Setup
        run: |
          ISCC.exe ${{ github.workspace }}/installer/installer_script.iss

          $sourcePath = "${{ github.workspace }}\installer\output\GalaxySlicerNeo_Setup.exe"
          $destinationPath = "${{ github.workspace }}\installer\GalaxySlicerNeo_Setup.exe"

          Move-Item -Path $sourcePath -Destination $destinationPath -Force

      - name: Upload installer (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: GalaxySlicerNeo_win_x64_v${{ vars.GSN_VERSION }}_setup-nightly.exe
          path: ${{ github.workspace }}/work/Projects/Installer/GalaxySlicerNeo_Setup.exe
